* [o] -	Add false positive checking:
	* [ ] -	Check number of odds against number of outcomes (might be
		hard with racing with non runners)
	* [X] -	Check number of odds is 1<

* [ ] -	Create tennisquick() among other sports, or make a generic scraper for these pages, possibly using a 2 outcome scraper and a 3 outcome scraper and a list of sports and the number winners market outcomes
* [ ] -	crawlall() goes 10 tabs deep, lessen that
* [ ] - scanwinners is the slowest part of the crawling process, for racing we can definitely filter this to only return future events
* [ ] - use the /betting-markets page to find more markets, it's a lot of information to scrape so maybe only choose certain markets
* [ ] -	Revise array limits or dynamicaly allocate space
* [ ] - Move limits to a #define file
* [O] -	Extract more data from matches:
	* [X] live, past, or future
	* [X] racing date
	* [X] date
	* [X] time
	* [X] sport
	* [ ] best bookie
	(I think the time it will take to process  will be minimal and then
	I can use this data to filter matches
* [ ] -	Integrate with calculator, might require a GUI so we can have buttons.
	This is the only reason to keep all of the data in Markets[] around
* [X] -	Fix tabs so they are not just three spaces
* [X] -	Sort output of list()
* [X] -	Filter by date
